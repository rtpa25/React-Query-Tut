React query fetches data from the server, then it stores in a key value fashion where the key is the name string that we provide and it should be unique for all queries.

Now as soon as it fetches data it stores that in cache, so when we revisit the UI the data is rendered from the cache to invalidate the freshness of the data it is fetched from the server in background. and the UI changes accordingly if the fetched fresh data is not equal to cache data

When the data is invalidated in the background the  isLoading flag does not change rather the isFethcing flag changes and fetches data in the background and updates as soon as the new data comes from the server and the cache is updated with the new data

Default cache time is 5min 

CACHING
cache time is default to 5min updating the cache time to 5sec makes the isLoading true every 5sec if you revisit the UI
default stale time is 0sec, so whenever the page is visited a background req is made to keep the cache updated but if you know that your data is not updated in the server so often and it's fine for the user to see the old data let's say for 30s then there wont be any network req in the background for 30sec even you visit the page
default for refetchOnMount is true it is the one that we need and same as refetchOnWindoFocus is also set to true
POLLING
making refetchInterval to 2sec will make network request every 2sec, this can be used in applications where the server data changes very frequently
refetchIntervalInBackground set to true will make network requests also when the screen looses focus
enabled false just does not make a network reques to fetch the data
refetch function can be used to fetch the data when the user wants basically like fetching data on a press of a button
OnSuccess and Onerror are basically post performance fucntions you can create sideeffects after a certain operation is done
the select func changes the data into a format that we need but the types are still fucked